image: python:3.7                    
#image docker a utiliser 

stages:   
#déclaration des stages
  - build
  - deploy
#le renomer le fichier en .gitlab-ci.yml, il est conseiller d'utilisé l'outils sur gitlab pour vérifié la syntaxe.Doit être placer à la racine du projet
#remplacer tout les information entre < > par celles correspondante au projet
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - <oprjetfrontend>/node_modules/

before_script:
  - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - curl -sL https://deb.nodesource.com/setup_10.x | bash -
  - apt-get -y install nodejs

  - python3.7 -m venv venv
  - python -V # for logs debugging
  #- pip install fabric3
  #- fab -f deployment/fabfile.py prepare_ci_config


build:prod-frontend:
  stage: build
  script:
    - cd <projetfront>
    - npm install
    - npm install @angular/cli -g # prevent `ng: command not found`
    - ng build  #--prod
  artifacts:
    paths:
      - <projetfront>/dist/
  only:
    - deploy #définie sur quelle bran,c
  tags:
    - docker
    
build:backend:
  stage: build
  script:
    - . venv/bin/activate
    - pip install pip -U
    - pip install -r requirements.txt
  artifacts:
    paths:
      - venv
  tags:
    - docker

deploy:prod-frontend:
  stage: deploy
  script:
    #    - npm install netlify-cli@latest -g
    #    - netlify deploy --site $NETLIFY_PROD_SITE_ID --auth $NETLIFY_AUTH_TOKEN --prod
    - cd boxerfront
    - export archive_name=boxers-frontend_$(date '+%d-%m-%y_%Hh%M').tar.gz
    - tar -cvf $archive_name dist/*

    - ssh-keyscan -t rsa <ipduserveur> >> ~/.ssh/known_hosts
    - scp $archive_name <user>@<ipduserveur>:"~/<racineduprojet>/<projetfront>"
    - ssh <user>@<ipduserveur> "cd ~/<racineduprojet>/<projetfront>/ && tar --overwrite -xf $archive_name && sudo /usr/sbin/service nginx restart"
  dependencies:
    - build:prod-frontend
  only:
    - deploy
  tags:
    - docker

deploy:prod-backend:
  stage: deploy
  script:
    - . venv/bin/activate
    - rm -rf `find -type d -name __pycache__`
    - export archive_name=boxers-backend_$(date '+%d-%m-%y_%Hh%M').tar.gz
    - tar -cvf $archive_name requirements.txt <dossierbacken>/ 

    - ssh-keyscan -t rsa <ipduserveur> >> ~/.ssh/known_hosts
    - scp  $archive_name <user>@<ipserveur>:"~/<racineduprojet>"
    - ssh <user>@<ipserveur>  "cd ~/boxer && tar --overwrite -xf $archive_name   && source /home/dev/venv/bin/activate && source ~/.bash_profile && /home/dev/boxer/boxerback/manage.py migrate && /home/dev/boxer/post.sh . &"
  dependencies:
    - build:backend
  only:
    - deploy
  tags:
    - docker
    



